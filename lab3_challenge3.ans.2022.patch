From 17e990f6cb43e1c7773f174664f7eb7ff35a80eb Mon Sep 17 00:00:00 2001
From: ldx123000 <771484893@qq.com>
Date: Wed, 24 Aug 2022 14:15:22 +0000
Subject: [PATCH] finish lab3_chellenge3

---
 kernel/process.c | 41 +++++++++++++++++++++++++++++++++++++++++
 kernel/process.h |  2 ++
 kernel/syscall.c | 12 ++++++++++++
 kernel/syscall.h |  2 ++
 user/user_lib.c  |  7 +++++++
 user/user_lib.h  |  1 +
 6 files changed, 65 insertions(+)

diff --git a/kernel/process.c b/kernel/process.c
index 776ff47..4ca4b50 100644
--- a/kernel/process.c
+++ b/kernel/process.c
@@ -220,3 +220,44 @@ int do_fork( process* parent)
 
   return child->pid;
 }
+
+char memory[100];
+int sharedMemory(int type, char *value, int offset, int length) {
+  // write
+  if (type == 1) {
+    if (length != 0) {
+      for (int i = 0; i < length; i++) {
+        *(memory + offset + i) = *(value + i);
+      }
+    } else {
+      int i = 0;
+      while (*(value + i) != 0) {
+        *(memory + offset + i) = *(value + i);
+        i++;
+      }
+      *(memory + offset + i) = '\0';
+    }
+    current->status = READY;
+    insert_to_ready_queue(current);
+    schedule();
+    return 1;
+  }
+
+  // read
+  else {
+    if (length != 0) {
+      for (int i = 0; i < length; i++) {
+        *(value + i) = *(memory + offset + i);
+      }
+    } else {
+      int i = 0;
+      while (*(value + i) != 0) {
+        *(value + i) = *(memory + offset + i);
+        i++;
+      }
+      *(value + i) = '\0';
+    }
+    return 1;
+  }
+  return 0;
+}
\ No newline at end of file
diff --git a/kernel/process.h b/kernel/process.h
index e8ee590..b35a273 100644
--- a/kernel/process.h
+++ b/kernel/process.h
@@ -92,6 +92,8 @@ process* alloc_process();
 int free_process( process* proc );
 // fork a child from parent
 int do_fork(process* parent);
+// shared memory
+int sharedMemory(int type,char* value,int offset,int length);
 
 // current running process
 extern process* current;
diff --git a/kernel/syscall.c b/kernel/syscall.c
index 3899a66..3b2e844 100644
--- a/kernel/syscall.c
+++ b/kernel/syscall.c
@@ -83,6 +83,16 @@ ssize_t sys_user_yield() {
   return 0;
 }
 
+//
+// target function
+//
+ssize_t sys_user_sharedMemory(uint64 type,char* value,uint64 offset,uint64 length) {
+  assert( current );
+  char* pa = (char*)user_va_to_pa((pagetable_t)(current->pagetable), (void*)value);
+  int result=sharedMemory(type,pa,offset,length);
+  return result;
+}
+
 //
 // [a0]: the syscall number; [a1] ... [a7]: arguments to the syscalls.
 // returns the code of success, (e.g., 0 means success, fail for otherwise)
@@ -102,6 +112,8 @@ long do_syscall(long a0, long a1, long a2, long a3, long a4, long a5, long a6, l
       return sys_user_fork();
     case SYS_user_yield:
       return sys_user_yield();
+    case SYS_user_sharedMemory:
+      return sys_user_sharedMemory(a1,(char*)a2,a3,a4);
     default:
       panic("Unknown syscall %ld \n", a0);
   }
diff --git a/kernel/syscall.h b/kernel/syscall.h
index e0a1a16..c33c76d 100644
--- a/kernel/syscall.h
+++ b/kernel/syscall.h
@@ -14,6 +14,8 @@
 // added @lab3_1
 #define SYS_user_fork (SYS_user_base + 4)
 #define SYS_user_yield (SYS_user_base + 5)
+// added @lab3_challenge3
+#define SYS_user_sharedMemory (SYS_user_base + 6)
 
 long do_syscall(long a0, long a1, long a2, long a3, long a4, long a5, long a6, long a7);
 
diff --git a/user/user_lib.c b/user/user_lib.c
index 3fcb85d..36023fe 100644
--- a/user/user_lib.c
+++ b/user/user_lib.c
@@ -76,3 +76,10 @@ int fork() {
 void yield() {
   do_user_call(SYS_user_yield, 0, 0, 0, 0, 0, 0, 0);
 }
+
+//
+// shared memory
+//
+int shared_memory(int type,char* value,int offset,int length){
+  return do_user_call(SYS_user_sharedMemory,type,(uint64)value, offset, length, 0, 0, 0);
+}
\ No newline at end of file
diff --git a/user/user_lib.h b/user/user_lib.h
index 63e2e25..2cd83f7 100644
--- a/user/user_lib.h
+++ b/user/user_lib.h
@@ -8,3 +8,4 @@ void* naive_malloc();
 void naive_free(void* va);
 int fork();
 void yield();
+int shared_memory(int type,char* value,int offset,int length);
\ No newline at end of file
-- 
2.30.2

